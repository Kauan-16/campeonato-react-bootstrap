{"version":3,"sources":["Header/Headers.js","Body/Article.js","Footer/Footer.js","componente1/Api.js","Body/CarouselPage.js","App.js","serviceWorker.js","index.js"],"names":["Headers","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","type","class","placeholder","id","Article","Jumbotron","fluid","Container","Footer","Table","borderless","scope","Api","state","Resposta","fetch","then","Response","json","setState","campeonato","this","map","item","key","treinadores","React","Component","BootstrapCarousel","Carousel","Item","style","src","Caption","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f1b96f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Headers = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n    <>\r\n        <div>\r\n            <Navbar color=\"primary\" dark expand=\"md\">\r\n                <NavbarBrand href=\"/\">Liga Pokmon</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                \r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"https://celke.com.br/\">Torneio</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"https://github.com/firgo12/campeonato-react-bootstrap\">Repositório</NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                Opções\r\n                </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Ranking\r\n                  </DropdownItem>\r\n                                <DropdownItem>\r\n                                    Times\r\n                  </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    About Us\r\n                  </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                    <NavbarText></NavbarText>\r\n                    <input type=\"search\" class=\"search-input\" placeholder=\"  Buscar Treinador...\" id=\"nome\"></input>\r\n                    <button class=\"search-button\"><b>Buscar</b></button>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default Headers;","import React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\n\r\nconst Article = (props) => {\r\n  return (\r\n    <>\r\n    <div>\r\n\r\n      <Jumbotron fluid>\r\n        <Container fluid>\r\n          <h1 className=\"display-3\">Que as batalhas comecem!</h1>\r\n          <p className=\"lead\">Eu escolho você!</p>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Article;","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <>\r\n    <div class=\"Footer\">\r\n\r\n    <Table borderless>\r\n      <thead>\r\n          <th>#</th>\r\n          <th>Primeiro Nome</th>\r\n          <th>Sobrenome</th>\r\n          <th>Nome no Git</th>\r\n      </thead>\r\n      <tbody>\r\n          <th scope=\"row\">1</th>\r\n          <td>Guilherme</td>\r\n          <td>Cunha</td>\r\n          <td>Firgo12</td>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Giovanni</td>\r\n          <td>Paulino</td>\r\n          <td>Giovanni-Perrota</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Igor</td>\r\n          <td>Aldivan</td>\r\n          <td>Igor-Aldivan77</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">4</th>\r\n          <td>Félix</td>\r\n          <td>Castro</td>\r\n          <td>felix-03</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">5</th>\r\n          <td>Juan</td>\r\n          <td>Faria</td>\r\n          <td>Juan Victor Angelo de Faria</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nclass Api extends React.Component {\r\n    state = {\r\n        Resposta: []\r\n    };\r\n    componentDidMount() {\r\n        fetch('https://api.sheety.co/21304639aa0f1abef5bde8395b1c48df/planilhaSemT%C3%ADtulo/campeonato')\r\n        .then(Response => Response.json())\r\n        .then(Response => {\r\n            this.setState({\r\n            Resposta: Response.campeonato\r\n            });\r\n        });\r\n    }\r\n\r\nrender() {\r\n    return(\r\n        <div className= \"container\">\r\n            <h1>\r\n                Torneio Pokémon!\r\n            </h1>\r\n            <div></div>\r\n            <ul>\r\n                {this.state.Resposta.map(item => (\r\n                    <li key={item.id}>\r\n                        <p><b>Treinador:</b> {item.treinadores}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n                }\r\n}\r\n\r\nexport default Api;","import React, { Component } from 'react'  \r\nimport Carousel from 'react-bootstrap/Carousel'  \r\nexport class BootstrapCarousel extends Component {  \r\n        render() {  \r\n  \r\n                return (  \r\n                        <div>  \r\n                         <div class='container-fluid' >  \r\n                          <div className=\"row title\" >   \r\n                         </div>  \r\n                         </div>  \r\n                         <div className='container-fluid' >  \r\n                         <Carousel>  \r\n                         <Carousel.Item style={{'height':\"400px\"}} >  \r\n                         <img style={{'height':\"400px\"}}  \r\n                         className=\"d-block w-100\"  \r\n                        src={'https://pbs.twimg.com/media/ERyfqbMUwAUuCqv.jpg'}  />  \r\n                           <Carousel.Caption>  \r\n                             <h3>Red </h3>  \r\n                                 </Carousel.Caption>  \r\n                                 </Carousel.Item  >  \r\n                                 <Carousel.Item style={{'height':\"400px\"}}>  \r\n                                 <img style={{'height':\"400px\"}}  \r\n                                   className=\"d-block w-100\"  \r\n                                    src={'https://i.redd.it/3gn5mjjvt2l41.jpg'}    />  \r\n                                       <Carousel.Caption>  \r\n                                   <h3>Blue</h3>  \r\n                                      </Carousel.Caption>  \r\n                                         </Carousel.Item>  \r\n                                       <Carousel.Item style={{'height':\"400px\"}}>  \r\n                                       <img style={{'height':\"400px\"}}  \r\n                                        className=\"d-block w-100\"  \r\n                                         src={'https://pm1.narvii.com/7483/1a73d76f7724cb1a16b02f5b5323d0a7c256f006r1-2048-1152v2_hq.jpg'}   />  \r\n                                        <Carousel.Caption>  \r\n                                          <h3>Green</h3>  \r\n                                          </Carousel.Caption>  \r\n                                         </Carousel.Item>  \r\n                                        </Carousel>  \r\n                                </div>  \r\n                        </div>  \r\n                )  \r\n        }  \r\n}  \r\nexport default BootstrapCarousel  \r\n","import React from 'react';\r\nimport Headers from './Header/Headers';\r\nimport Article from './Body/Article';\r\nimport Footer from './Footer/Footer';\r\nimport Api from './componente1/Api';\r\nimport BootstrapCarousel from './Body/CarouselPage';\r\n//import { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\n//import { Button } from 'reactstrap';\r\n\r\n//import Home from './Home';\r\n//import List from './Lista';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n        <>\r\n            <div>\r\n                <Headers />\r\n                <BootstrapCarousel />\r\n                <Article />\r\n                <Api />\r\n                <Footer />\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// Put any other imports below so that CSS from your\r\n// components takes precedence over default styles.\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}